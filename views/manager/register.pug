doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    title Create New Account
    link(href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css' rel='stylesheet')
    link(rel='stylesheet', href='/stylesheets/style2.css')
    script(src='https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js')
    style.
      @keyframes vibrateX {
        0%, 100% { transform: translateX(0); }
        25% { transform: translateX(4px); }
        75% { transform: translateX(-4px); }
      }
      .vibrate {
        animation: vibrateX 0.3s linear;
      }

  body.page-background.height100vh
    .container
      .row.justify-content-center.align-items-center.height100vh.px-3
        .row.illustration-side.justify-content-center.align-items-center.p-1.py-5.p-md-5
          .col-10.col-lg-6
            img(src='/img/upload/login.png', alt='Your Graphic', style='max-width: 100%; height: auto;')
          .col-12.col-lg-6
            .card.mt-2.shadow.rounded-3
              .card-body
                h3.mb-3.text-center Create New Account
                form#registerForm(role='form', action='/manager/register', method='post', onsubmit='return validateForm()')
                  .form-floating.mb-3.pb-2
                    input#name.form-control(type='text', name='name', placeholder=' ', required)
                    label(for='name') Name
                    p#nameError.text-danger.position-absolute(start-0 mt-1, style='display: none;')

                  .form-floating.mb-3.pb-2
                    input#project.form-control(type='text', name='project', placeholder=' ', required)
                    label(for='project') Project Name
                    p#projectError.text-danger.position-absolute(start-0 mt-1, style='display: none;')

                  .form-floating.mb-3.pb-2.position-relative
                    input#phone.form-control(type='tel', name='phone', placeholder=' ', required, onkeypress='return isNumberKey(event)', maxlength='8')
                    label(for='phone') Phone Number
                    p#phoneError.text-danger.position-absolute(start-0 mt-1, style='display: none;')

                  .form-floating.mb-3.pb-2
                    input#email.form-control(type='email', name='email', placeholder=' ', required)
                    label(for='email') Email address
                    p#emailError.text-danger.position-absolute(start-0 mt-1, style='display: none;')

                  .form-floating.mb-3.pb-2.position-relative
                    input#password.form-control(type='password', name='password', placeholder=' ', required)
                    label(for='password') Password
                    p#passwordError.text-danger.position-absolute(start-0 mt-1, style='display: none;')

                  .form-floating.mb-3.pb-2.position-relative
                    input#confirmPassword.form-control(type='password', name='confirmPassword', placeholder=' ', required)
                    label(for='confirmPassword') Confirm Password
                    p#confirmPasswordError.text-danger.position-absolute(start-0 mt-1, style='display: none;')

                  .d-grid.gap-2
                    button.btn.btn-primary(type='submit') Sign Up

                  .mt-3.text-center
                    a(href='#') Forgot Password?
                  .mt-3.text-center
                    a(href='/manager/register') Sign In

    script.
      const email = document.getElementById('email');
      const emailError = document.getElementById('emailError');
      const emailRegex = /^[^@]+@[^@]+\.[^@]+$/;

      function validateForm() {
          let isValid = true;
      
          // Validate email
          const email = document.getElementById('email');
          const emailError = document.getElementById('emailError');
          const emailRegex = /^[^@]+@[^@]+\.[^@]+$/;
          if (!emailRegex.test(email.value)) {
              emailError.textContent = 'Please enter a valid email address.';
              emailError.style.display = 'block';
              emailError.classList.add('vibrate');
              setTimeout(() => emailError.classList.remove('vibrate'), 300);
              isValid = false;
          } else {
              emailError.style.display = 'none';
          }
      
          // Validate phone number
          const phone = document.getElementById('phone');
          const phoneError = document.getElementById('phoneError');
          const isEightDigits = phone.value.replace(/[^0-9]/g, "").length === 8;
          if (!isEightDigits) {
              phoneError.textContent = 'Phone number must be exactly 8 digits.';
              phoneError.style.display = 'block';
              phoneError.classList.add('vibrate');
              setTimeout(() => phoneError.classList.remove('vibrate'), 300);
              isValid = false;
          } else {
              phoneError.style.display = 'none';
          }
      
          // Validate password
          const password = document.getElementById('password');
          const passwordError = document.getElementById('passwordError');
          const hasSixNumbers = password.value.replace(/[^0-9]/g, "").length >= 6;
          if (!hasSixNumbers) {
              passwordError.textContent = 'Password must contain at least 6 numbers.';
              passwordError.style.display = 'block';
              passwordError.classList.add('vibrate');
              setTimeout(() => passwordError.classList.remove('vibrate'), 300);
              isValid = false;
          } else {
              passwordError.style.display = 'none';
          }
      
          // Validate confirm password
          const confirmPassword = document.getElementById('confirmPassword');
          const confirmPasswordError = document.getElementById('confirmPasswordError');
          if (confirmPassword.value.length > 0 && password.value !== confirmPassword.value) {
              confirmPasswordError.textContent = 'Passwords do not match.';
              confirmPasswordError.style.display = 'block';
              confirmPasswordError.classList.add('vibrate');
              setTimeout(() => confirmPasswordError.classList.remove('vibrate'), 300);
              isValid = false;
          } else {
              confirmPasswordError.style.display = 'none';
          }
      
          return isValid; // This will prevent the form from submitting if not valid
      }
      

      const password = document.getElementById('password');
      const confirmPassword = document.getElementById('confirmPassword');
      const phone = document.getElementById('phone');
      const passwordError = document.getElementById('passwordError');
      const confirmPasswordError = document.getElementById('confirmPasswordError');
      const phoneError = document.getElementById('phoneError');

      function validatePhoneNumber() {
        const isEightDigits = phone.value.replace(/[^0-9]/g, "").length === 8;
        if (!isEightDigits) {
          phoneError.textContent = 'Phone number must be exactly 8 digits.';
          phoneError.style.display = 'block';
          phoneError.classList.add('vibrate');
          setTimeout(() => phoneError.classList.remove('vibrate'), 300);
        } else {
          phoneError.style.display = 'none';
        }
      }

      function validatePassword() {
        const hasSixNumbers = password.value.replace(/[^0-9]/g, "").length >= 6;
        if (!hasSixNumbers) {
          passwordError.textContent = 'Password must contain at least 6 numbers.';
          passwordError.style.display = 'block';
          passwordError.classList.add('vibrate');
          setTimeout(() => passwordError.classList.remove('vibrate'), 300);
        } else {
          passwordError.style.display = 'none';
        }
      }

      function validateConfirmPassword() {
        if (confirmPassword.value.length > 0 && password.value !== confirmPassword.value) {
          confirmPasswordError.textContent = 'Passwords do not match.';
          confirmPasswordError.style.display = 'block';
          confirmPasswordError.classList.add('vibrate');
          setTimeout(() => confirmPasswordError.classList.remove('vibrate'), 300);
        } else {
          confirmPasswordError.style.display = 'none';
        }
      }

      phone.addEventListener('input', validatePhoneNumber);
      password.addEventListener('input', function() {
        validatePassword();
        validateConfirmPassword();
      });
      confirmPassword.addEventListener('input', validateConfirmPassword);

      function isNumberKey(evt) {
          var charCode = (evt.which) ? evt.which : evt.keyCode;
      
          // Allow only numeric characters and backspace
          if (charCode < 48 || charCode > 57) {
              return false;
          }
      
          // Limit input length to 8 characters
          var inputValue = evt.target.value || '';
          if (inputValue.length >= 8 && charCode !== 8) {
              return false;
          }
      
          return true;
      }