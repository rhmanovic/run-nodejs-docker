// TAP Modal
.modal.fade#tapModal(tabindex='-1', aria-labelledby='tapModalLabel', aria-hidden='true')
  .modal-dialog
    .modal-content
      .modal-header
        button.btn-close.ms-0(type='button', data-bs-dismiss='modal', aria-label='Close')
        h5.modal-title#tapModalLabel إعدادات بوابة الدفع TAP
      .modal-body
        form#tapForm(method='POST', action='/manager/update-tap-settings')

          // Live Authorization Key
          .form-group.row.align-middle.mb-3
            label.col-4(for='liveAuthorization') مفتاح التفويض الفعلي
            .col-8
              input#liveAuthorization.form-control(type='text', name='live_authorization', value=merchant.tapSettings.liveAuthorization || '', placeholder='أدخل مفتاح التفويض الفعلي')

          // Test Authorization Key
          .form-group.row.align-middle.mb-3
            label.col-4(for='testAuthorization') مفتاح التفويض التجريبي
            .col-8
              input#testAuthorization.form-control(type='text', name='test_authorization', value=merchant.tapSettings.testAuthorization || '', placeholder='أدخل مفتاح التفويض التجريبي')

          // Status Switch
          .form-group.row.align-middle.mb-3
            label.col-4(for='statusSwitch') الحالة
            .col-8.d-flex.align-items-center
              label.switch
                input#statusSwitch(type='checkbox', name='status', checked=merchant.tapSettings.status, onchange='toggleLiveTestSwitch()')
                span.switch-slider.round
              span.checkmark.fas.fa-check(style='display: none;')

          // Live/Test Switch
          .form-group.row.align-middle.mb-3#liveTestSwitchContainer
            label.col-4(for='liveTestSwitch') وضع (Live/Test)
            .col-8.d-flex.align-items-center
              label.switch
                input#liveTestSwitch(type='checkbox', name='mode', value='true', checked=merchant.tapSettings.mode === 'live', onchange='toggleModeText()')
                span.switch-slider.round.live-test-slider
              span#modeText.ml-2 Test

          // Modal Footer
          .modal-footer
            button.btn.btn-secondary(type='button', data-bs-dismiss='modal') إغلاق
            button.btn.btn-primary(type='submit') حفظ التغييرات

// Custom CSS for Switches
style.
  .switch {
    position: relative;
    display: inline-block;
    width: 60px;
    height: 34px;
    margin-right: 10px; /* Add margin to align text */
  }

  .switch input {
    opacity: 0;
    width: 0;
    height: 0;
  }

  .switch-slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    transition: .4s;
    border-radius: 34px;
  }

  .switch-slider:before {
    position: absolute;
    content: "";
    height: 26px;
    width: 26px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    transition: .4s;
    border-radius: 50%;
  }

  input:checked + .switch-slider {
    background-color: #007bff; /* Blue for Live */
  }

  input:checked + .switch-slider:before {
    transform: translateX(26px);
  }

  /* Custom Styles for Live/Test Switch */
  .live-test-slider {
    background-color: green; /* Green for Test */
  }

  #liveTestSwitch:checked + .live-test-slider {
    background-color: #007bff; /* Blue for Live */
  }

  /* Align the text with the switch */
  #modeText {
    font-weight: bold;
    color: green; /* Green for Test */
  }

// JavaScript to Toggle Live/Test Switch Visibility and Mode Text/Color
script.
  function toggleLiveTestSwitch() {
    var statusSwitch = document.getElementById('statusSwitch');
    var liveTestSwitchContainer = document.getElementById('liveTestSwitchContainer');

    if (statusSwitch.checked) {
      liveTestSwitchContainer.style.display = 'flex';
      toggleModeText(); // Ensure the text is correct
    } else {
      liveTestSwitchContainer.style.display = 'none';
    }
  }

  function toggleModeText() {
    var switchElement = document.getElementById('liveTestSwitch');
    var textElement = document.getElementById('modeText');

    if (switchElement.checked) {
      textElement.textContent = 'Live';
      textElement.style.color = '#007bff'; // Blue for Live
    } else {
      textElement.textContent = 'Test';
      textElement.style.color = 'green'; // Green for Test
    }
  }

  // Initialize the visibility and text based on the current state
  document.addEventListener('DOMContentLoaded', function() {
    toggleLiveTestSwitch();
    toggleModeText();
  });
